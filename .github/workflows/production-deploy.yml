name: Production Deployment

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio
      
      - name: Run tests
        env:
          ENVIRONMENT: test
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        run: |
          pytest tests/ -v --cov=src --cov-report=term-missing
      
      - name: Check code quality
        run: |
          pip install ruff black mypy
          ruff check src/
          black --check src/
          mypy src/ --ignore-missing-imports

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Trigger Render Production Deploy
        env:
          RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_PRODUCTION_DEPLOY_HOOK }}
        run: |
          curl -X POST "$RENDER_DEPLOY_HOOK"
      
      - name: Wait for deployment
        run: sleep 30
      
      - name: Health check
        run: |
          max_attempts=10
          attempt=1
          while [ $attempt -le $max_attempts ]; do
            echo "Attempt $attempt of $max_attempts"
            if curl -f "${{ secrets.PRODUCTION_URL }}/health"; then
              echo "Health check passed!"
              exit 0
            fi
            sleep 10
            attempt=$((attempt + 1))
          done
          echo "Health check failed after $max_attempts attempts"
          exit 1
      
      - name: Notify deployment
        if: success()
        run: |
          echo "Production deployment successful!"
          # Add notification logic here (Slack, Discord, etc.)
      
      - name: Rollback on failure
        if: failure()
        run: |
          echo "Deployment failed! Manual rollback may be required."
          # Add rollback webhook or notification here