name: Preview Environment Deployment

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
    types: [opened, synchronize, reopened]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio
      
      - name: Run tests
        env:
          ENVIRONMENT: test
          SUPABASE_URL: ${{ secrets.DEV_SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.DEV_SUPABASE_ANON_KEY }}
        run: |
          pytest tests/ -v --cov=src --cov-report=term-missing
      
      - name: Check code quality
        run: |
          pip install ruff black mypy
          ruff check src/
          black --check src/
          mypy src/ --ignore-missing-imports

  deploy:
    name: Deploy to Preview
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/develop'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Trigger Render Preview Deploy
        env:
          RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_PREVIEW_DEPLOY_HOOK }}
        run: |
          curl -X POST "$RENDER_DEPLOY_HOOK"
      
      - name: Wait for deployment
        run: sleep 30
      
      - name: Health check
        run: |
          max_attempts=10
          attempt=1
          while [ $attempt -le $max_attempts ]; do
            echo "Attempt $attempt of $max_attempts"
            if curl -f "${{ secrets.PREVIEW_URL }}/health"; then
              echo "Health check passed!"
              exit 0
            fi
            sleep 10
            attempt=$((attempt + 1))
          done
          echo "Health check failed after $max_attempts attempts"
          exit 1

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/develop'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio httpx
      
      - name: Run integration tests
        env:
          API_URL: ${{ secrets.PREVIEW_URL }}
          TEST_BOT_TOKEN: ${{ secrets.DEV_TELEGRAM_BOT_TOKEN }}
        run: |
          pytest tests/integration/ -v -m preview