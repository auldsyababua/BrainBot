# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
PIPFILE.lock

# Virtual Environment
venv/
ENV/
env/
.venv/

# IDE
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store

# Claude desktop
.claude/
# Claude backup artifacts
.claude.backup-*/
*.claude.backup-*
# Local settings
*.local.json
.claude.backup-*/*.local.json

# Environment variables
.env
.env.local
.env.*.local

# Logs
*.log
logs/

# Test-specific
testsprite_tests/tmp/config.json
testsprite_tests/tmp/*.local.json

# Testing
.pytest_cache/
.coverage
htmlcov/
.tox/
.nox/
tests/test_results/

# Jupyter Notebook
.ipynb_checkpoints

# pyenv
.python-version

# Notes folder - DEPRECATED filesystem storage (being migrated to Supabase)
# IMPORTANT: Company notes should NEVER be in git
notes/
!notes/index.md

# Temporary test files and scratch directories
scratch/
**/scratch/
interactive_*.py
/tmp_test_*.py
/quick_test_*.py

# Sensitive documentation
HANDOFF_DOC.md
FUTURE_FEATURES.md
*handoff*
*HANDOFF*

*.local.toml
.ruff.local.toml
.black.local.toml
pyproject.local.toml
.venv
.hypothesis/
.mypy_cache/
.dmypy.json
dmypy.json
.pytype/
.pyre/
.vscode/settings.json

# AI Coder Template (for internal use)
AI_CODER_TEMPLATE.md

# Prompts directory (for internal use)
prompts/

# Architecture file (contains local paths)
ARCHITECTURE.md
.aider*

# DEVLOG System - Auto-generated files
DEVLOG.md
.devlog/

# Archive directory (for old/documentation files)
archive/

# Temporary directories
workers/

# QuickBooks sensitive data
.quickbooks_token.json
quickbooks_tokens/

# Cache and build directories
.ruff_cache/
__pycache__/
.coverage
htmlcov/
.nyc_output/
.cache/

# Aider files (already listed above but grouping here)
.aider*

# Local config files
*.local.toml

# Backup files
*.bak
tasks.md.bak

# MCP (Model Context Protocol) Configuration
.mcp.json
.mcp/.env
.mcp/*.env
.mcp/logs/

# Sensitive secrets files
secrets.env
secrets.env.*
*.env.cleaned

# Node.js and Frontend (Telegram Mini App)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
*.tsbuildinfo
.eslintcache

# Frontend Build Outputs
telegram-mini-app/dist/
telegram-mini-app/build/
telegram-mini-app/.vite/

# Package Files
*.tgz
*.tar.gz

# Development Tools
.black.local.toml
.ruff.local.toml
pyproject.local.toml

# OS and Editor files
Thumbs.db
desktop.ini
*~
.project
.classpath
.settings/

# Graph Memory and Database files
*.sqlite
*.sqlite3
*.db
!migrations/*.sql

# Neo4j specific
neo4j/
.neo4j/
.mcp/config.json*

# One-off files and reports (prevent repository clutter)
/*_REPORT.md
/*_ANALYSIS.md
/*_SUMMARY.md
/IMPLEMENTATION_*.md
/QA_*.md
/terminal/
/tasks.md

# Additional temporary patterns
BOT_TEST_*.md
TELEGRAM_BOT_*.md
GRAPH_MEMORY_*.md
KIRO_WORKFLOW.md
INFRASTRUCTURE_*.md
